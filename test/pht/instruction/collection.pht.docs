(category "collection"
    (instr
        (long "arr-of-type")
        (desc "Создаёт массив из элементов с определённым типом.")
        (usage
            "(arr-of-type type arg0 argN)"
            [["type"] "тип."]
            [["arg*"] "элементы."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (arr-of-type ^Object 12 21 33))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long "arr-of")
        (desc "Создаёт массив из элементов.")
        (usage
            "(arr-of arg0 argN)"
            [["arg*"] "элементы."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (arr-of 12 21 33))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long "arr-size")
        (desc "Возвращает размер массива.")
        (usage
            "(arr-size arg)"
            [["arg"] "массив."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (arr-size (arr-of 202 203 213 666 777 999)))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long "arr-type")
        (desc "Создаёт @i{тип массива} из @i{типа элементов}.")
        (usage
            "(arr-type type)"
            [["type"] "тип элементов."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (arr-size (arr-of 202 203 213 666 777 999)))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long  "arr-set")
        (short "aset")
        (desc  "Устанавливает значение элемента массива по индексу.")
        (usage
            "(arr-set array index value)"
            [["array"] "массив."]
            [["index"] "индекс."]
            [["value"] "значение."])
        (usage
            "(aset array index value)"
            [["array"] "массив."]
            [["index"] "индекс."]
            [["value"] "значение."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (def [[arr (new-arr ^int 4)]])
                    (aset arr 0 12)
                    (aset arr 3 21)
                    (println (#contentToString arr))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long  "arr-get")
        (short "aget")
        (desc  "Получает значение элемента массива по индексу.")
        (usage
            "(arr-get array index)"
            [["array"] "массив."]
            [["index"] "индекс."])
        (usage
            "(aget array index)"
            [["array"] "массив."]
            [["index"] "индекс."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (aget (arr-of 12 21 33) 1))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long "new-arr")
        (desc "Создаёт массив заданного типа и размера.")
        (usage
            "(new-arr type size)"
            [["type"] "тип."]
            [["size"] "размер."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (#contentToString (new-arr ^int 4)))))
            """
            "Код работает на всех платформах!")))