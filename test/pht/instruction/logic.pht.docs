(category "logic & bits"
    (instr
        (long   "and")
        (symbol "&")
        (desc   "[@i{Логическая} | @i{Битовая}] операция @b{И} для @i{двух} значений.")
        (usage
            "(and argA argB)"
            [["argA" "argB"] "значения."])
        (usage
            "(& argA argB)"
            [["argA" "argB"] "значения."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (and 3 2))))
            """
            "Код работает на всех платформах!")
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (and true true))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long   "or")
        (symbol "|")
        (desc   "[@i{Логическая} | @i{Битовая}] операция @b{ИЛИ} для @i{двух} значений.")
        (usage
            "(or argA argB)"
            [["argA" "argB"] "значения."])
        (usage
            "(| argA argB)"
            [["argA" "argB"] "значения."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (or 1 2))))
            """
            "Код работает на всех платформах!")
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (or false true))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long "xor")
        (desc "[@i{Логическая} | @i{Битовая}] операция @b{ИСКЛ ИЛИ} для @i{двух} значений.")
        (usage
            "(xor argA argB)"
            [["argA" "argB"] "значения."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (xor 1 4))))
            """
            "Код работает на всех платформах!")
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (xor false false))))
            """
            "Код работает на всех платформах!"))
    (instr
        (long   "not")
        (symbol "!")
        (desc   "[@i{Логическая} | @i{Битовая}] операция @b{НЕ} для @i{одного} значения.")
        (usage
            "(not arg)"
            [["arg"] "значение."])
        (usage
            "(! arg)"
            [["arg"] "значение."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (println (! false))))
            """
            "Код работает на всех платформах!")))