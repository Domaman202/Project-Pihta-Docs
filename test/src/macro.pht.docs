(category "macro"
    (instr
        (long "def-macro")
        (desc "Определяет макрос.")
        (usage
            "(def-macro name [arg0 argN] expr0 exprN)"
            [["name"] "имя макроса."]
            [["arg0" "argN"] "аргументы макроса."]
            [["expr0" "exprN"] "тело макроса."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (def-macro print-sum [a b]
                        (println (+ (macro-arg a) (macro-arg b))))
                    (print-sum 12 21)))
            """
            "Код работает на всех платформах!"))

    (instr
        (long "macro")
        (desc "Вставка макроса.")
        (usage
            "(name arg0 argN)"
            [["name"] "имя макроса."]
            [["arg0" "argN"] "аргументы макроса."])
        (usage
            "(macro name arg0 argN)"
            [["name"] "имя макроса."]
            [["arg0" "argN"] "аргументы макроса."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (def-macro print-sum [a b]
                        (println (- (macro-arg a) (macro-arg b))))
                    (print-sum 3333 1111)))
            """
            "Код работает на всех платформах!")
        (example
            """
            (use-ctx pht
                (app-fn
                    (def-macro print-sum [a b]
                        (println (- (macro-arg a) (macro-arg b))))
                    (macro print-sum 213 202)))
            """
            "Код работает на всех платформах!"))

    (instr
        (long "macro-arg")
        (desc "Вставка аргумента макроса.")
        (usage
            "(macro-arg name)"
            [["name"] "имя аргумента."])
        (example
            """
            (use-ctx pht
                (app-fn
                    (def-macro log [data]
                        (println (macro-arg data)))
                    (log 240222)))
            """
            "Код работает на всех платформах!"))

    (instr
        (long "macro-inline")
        (desc "Указание жёсткого встраивания аргументов макроса в пределах выражения.")
        (usage
            "(macro-inline [name0 nameN] expr)"
            [["arg0" "argN"] "имена аргументов."]
            [["expr"] "выражение."])
        (example
            """
            (use-ctx pht
                (app
                    (@static
                        (defn foo ^void [[arg0 ^Object] [arg1 ^Object] [arg2 ^Object]]
                            (println arg0 arg1 arg2)))
                    (def-macro call-foo [args]
                        (macro-inline [args]
                            (#foo . (macro-arg args))))
                    (app-fn
                        (call-foo [12 21 33]))))
            """
            "Код работает на всех платформах!")))